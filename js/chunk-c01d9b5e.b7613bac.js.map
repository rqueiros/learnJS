{"version":3,"sources":["webpack:///../../../src/components/VRating/VRating.ts","webpack:///../../../src/mixins/rippleable/index.ts"],"names":["name","props","backgroundColor","type","default","color","clearable","dense","emptyIcon","fullIcon","halfIcon","halfIncrements","hover","length","Number","readonly","size","value","iconLabel","data","hoverIndex","internalValue","this","computed","directives","circle","iconProps","xSmall","dark","large","light","medium","small","xLarge","isHovering","watch","val","$emit","methods","createClickFn","e","newValue","createProps","index","click","isFilled","Math","isHovered","i","genHoverIndex","isHalf","isHalfEvent","$vuetify","getIconName","isFull","getColor","rect","onMouseEnter","onMouseLeave","genItem","$scopedSlots","item","listeners","$createElement","setTextColor","attrs","tabindex","lang","t","on","render","children","h","staticClass","class","ripple","Boolean","genRipple","center"],"mappings":"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","file":"js/chunk-c01d9b5e.b7613bac.js","sourcesContent":["// Styles\nimport './VRating.sass'\n\n// Components\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Delayable from '../../mixins/delayable'\nimport Sizeable from '../../mixins/sizeable'\nimport Rippleable from '../../mixins/rippleable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { createRange } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode, VNodeDirective, VNodeChildren } from 'vue'\n\ntype ItemSlotProps = {\n  index: number\n  value: number\n  isFilled: boolean\n  isHalfFilled?: boolean | undefined\n  isHovered: boolean\n  isHalfHovered?: boolean | undefined\n  click: Function\n}\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Delayable,\n  Rippleable,\n  Sizeable,\n  Themeable\n).extend({\n  name: 'v-rating',\n\n  props: {\n    backgroundColor: {\n      type: String,\n      default: 'accent',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    clearable: Boolean,\n    dense: Boolean,\n    emptyIcon: {\n      type: String,\n      default: '$ratingEmpty',\n    },\n    fullIcon: {\n      type: String,\n      default: '$ratingFull',\n    },\n    halfIcon: {\n      type: String,\n      default: '$ratingHalf',\n    },\n    halfIncrements: Boolean,\n    hover: Boolean,\n    length: {\n      type: [Number, String],\n      default: 5,\n    },\n    readonly: Boolean,\n    size: [Number, String],\n    value: {\n      type: Number,\n      default: 0,\n    },\n    iconLabel: {\n      type: String,\n      default: '$vuetify.rating.ariaLabel.icon',\n    },\n  },\n\n  data () {\n    return {\n      hoverIndex: -1,\n      internalValue: this.value,\n    }\n  },\n\n  computed: {\n    directives (): VNodeDirective[] {\n      if (this.readonly || !this.ripple) return []\n\n      return [{\n        name: 'ripple',\n        value: { circle: true },\n      } as VNodeDirective]\n    },\n    iconProps (): object {\n      const {\n        dark,\n        large,\n        light,\n        medium,\n        small,\n        size,\n        xLarge,\n        xSmall,\n      } = this.$props\n\n      return {\n        dark,\n        large,\n        light,\n        medium,\n        size,\n        small,\n        xLarge,\n        xSmall,\n      }\n    },\n    isHovering (): boolean {\n      return this.hover && this.hoverIndex >= 0\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      val !== this.value && this.$emit('input', val)\n    },\n    value (val) {\n      this.internalValue = val\n    },\n  },\n\n  methods: {\n    createClickFn (i: number): Function {\n      return (e: MouseEvent) => {\n        if (this.readonly) return\n\n        const newValue = this.genHoverIndex(e, i)\n        if (this.clearable && this.internalValue === newValue) {\n          this.internalValue = 0\n        } else {\n          this.internalValue = newValue\n        }\n      }\n    },\n    createProps (i: number): ItemSlotProps {\n      const props: ItemSlotProps = {\n        index: i,\n        value: this.internalValue,\n        click: this.createClickFn(i),\n        isFilled: Math.floor(this.internalValue) > i,\n        isHovered: Math.floor(this.hoverIndex) > i,\n      }\n\n      if (this.halfIncrements) {\n        props.isHalfHovered = !props.isHovered && (this.hoverIndex - i) % 1 > 0\n        props.isHalfFilled = !props.isFilled && (this.internalValue - i) % 1 > 0\n      }\n\n      return props\n    },\n    genHoverIndex (e: MouseEvent, i: number) {\n      let isHalf = this.isHalfEvent(e)\n\n      if (\n        this.halfIncrements &&\n        this.$vuetify.rtl\n      ) {\n        isHalf = !isHalf\n      }\n\n      return i + (isHalf ? 0.5 : 1)\n    },\n    getIconName (props: ItemSlotProps): string {\n      const isFull = this.isHovering ? props.isHovered : props.isFilled\n      const isHalf = this.isHovering ? props.isHalfHovered : props.isHalfFilled\n\n      return isFull ? this.fullIcon : isHalf ? this.halfIcon : this.emptyIcon\n    },\n    getColor (props: ItemSlotProps): string {\n      if (this.isHovering) {\n        if (props.isHovered || props.isHalfHovered) return this.color\n      } else {\n        if (props.isFilled || props.isHalfFilled) return this.color\n      }\n\n      return this.backgroundColor\n    },\n    isHalfEvent (e: MouseEvent): boolean {\n      if (this.halfIncrements) {\n        const rect = e.target && (e.target as HTMLElement).getBoundingClientRect()\n        if (rect && (e.pageX - rect.left) < rect.width / 2) return true\n      }\n\n      return false\n    },\n    onMouseEnter (e: MouseEvent, i: number): void {\n      this.runDelay('open', () => {\n        this.hoverIndex = this.genHoverIndex(e, i)\n      })\n    },\n    onMouseLeave (): void {\n      this.runDelay('close', () => (this.hoverIndex = -1))\n    },\n    genItem (i: number): VNode | VNodeChildren | string {\n      const props = this.createProps(i)\n\n      if (this.$scopedSlots.item) return this.$scopedSlots.item(props)\n\n      const listeners: Record<string, Function> = {\n        click: props.click,\n      }\n\n      if (this.hover) {\n        listeners.mouseenter = (e: MouseEvent) => this.onMouseEnter(e, i)\n        listeners.mouseleave = this.onMouseLeave\n\n        if (this.halfIncrements) {\n          listeners.mousemove = (e: MouseEvent) => this.onMouseEnter(e, i)\n        }\n      }\n\n      return this.$createElement(VIcon, this.setTextColor(this.getColor(props), {\n        attrs: {\n          tabindex: -1,\n          'aria-label': this.$vuetify.lang.t(this.iconLabel, i + 1, Number(this.length)),\n        },\n        directives: this.directives,\n        props: this.iconProps,\n        on: listeners,\n      }), [this.getIconName(props)])\n    },\n  },\n\n  render (h): VNode {\n    const children = createRange(Number(this.length)).map(i => this.genItem(i))\n\n    return h('div', {\n      staticClass: 'v-rating',\n      class: {\n        'v-rating--readonly': this.readonly,\n        'v-rating--dense': this.dense,\n      },\n    }, children)\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n\n      return this.$createElement('div', data)\n    },\n  },\n})\n"],"sourceRoot":""}